library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity memory is
    port (
        Mem_read   : in  std_logic;
        Mem_write  : in  std_logic;
        Mem_A_in   : in  std_logic_vector(15 downto 0);
        Mem_D_in   : in  std_logic_vector(7 downto 0);
        Mem_D_out  : out std_logic_vector(7 downto 0)
    );
end memory;

architecture Behavioral of memory is
    type memory_array is array(0 to 65535) of std_logic_vector(7 downto 0);
    signal Mem : memory_array := (others => (others => '0'));
begin
    process(Mem_read, Mem_write, Mem_A_in, Mem_D_in)
    begin
        if Mem_write = '1' then
            Mem(to_integer(unsigned(Mem_A_in))) <= Mem_D_in;
        elsif Mem_read = '1' then
            Mem_D_out <= Mem(to_integer(unsigned(Mem_A_in)));
        end if;
    end process;
end Behavioral;
